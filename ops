// Define the fields we want to extract
var fields = ["opid", "type", "ns", "host", "locks", "waitingForLock", "secs_running", "command"];

// Get current operations running for more than 1 minute (60 seconds)
var ops = db.currentOp({
  "active": true,
  "secs_running": { "$gt": 60 }
});

// Print CSV header
print(fields.join(','));

// Process each operation
ops.inprog.forEach(function(op) {
  var row = [];
  
  fields.forEach(function(field) {
    // Handle nested fields with dot notation
    var value = field.split('.').reduce(function(obj, key) {
      return (obj && obj.hasOwnProperty(key)) ? obj[key] : null;
    }, op);
    
    // Special handling for command field
    if (field === "command" && value !== null && value !== undefined) {
      // Convert command to JSON string and truncate to 500 chars
      try {
        value = JSON.stringify(value).substring(0, 500);
      } catch(e) {
        value = value.toString().substring(0, 500);
      }
    }
    
    // Convert to string and replace null/undefined with "NA"
    var strValue = (value === null || value === undefined) ? "NA" : value.toString();
    
    // Escape quotes in string values and wrap in quotes if contains comma
    strValue = strValue.replace(/"/g, '""');
    if (strValue.includes(',')) {
      strValue = '"' + strValue + '"';
    }
    
    row.push(strValue);
  });
  
  print(row.join(','));
});
