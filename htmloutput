#!/bin/bash

# MongoDB connection parameters
HOST="localhost"
PORT="27017"
DB="your_database"
COLLECTION="collectionx"

# HTML output file
OUTPUT_FILE="mongodb_logs.html"

# Start HTML file
cat > $OUTPUT_FILE <<EOF
<!DOCTYPE html>
<html>
<head>
    <title>MongoDB Query Logs</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        table {
            border-collapse: collapse;
            width: 100%;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
            position: sticky;
            top: 0;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        tr:hover {
            background-color: #f1f1f1;
        }
        .command-link {
            color: #0066cc;
            text-decoration: none;
            cursor: pointer;
        }
        .command-link:hover {
            text-decoration: underline;
        }
        #queryModal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }
        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-height: 70%;
            overflow: auto;
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }
        pre {
            white-space: pre-wrap;
            word-wrap: break-word;
        }
    </style>
</head>
<body>
    <h1>MongoDB Query Logs</h1>
    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>C</th>
                <th>ID</th>
                <th>CTX</th>
                <th>NS</th>
                <th>NumYields</th>
                <th>Storage</th>
                <th>Remote</th>
                <th>Duration (min)</th>
                <th>Command</th>
            </tr>
        </thead>
        <tbody>
EOF

# Query MongoDB and append data to HTML
mongo --quiet $HOST:$PORT/$DB <<EOF | awk -F'\t' '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10}' >> $OUTPUT_FILE
db.$COLLECTION.find({}, {
    "id": 1,
    "c": 1,
    "ctx": 1,
    "attr.ns": 1,
    "attr.numyields": 1,
    "attr.storage": 1,
    "attr.remote": 1,
    "attr.durationmin": 1,
    "attr.command": 1,
    _id: 0
}).forEach(function(doc) {
    var commandStr = JSON.stringify(doc.attr.command, null, 2).replace(/"/g, '&quot;');
    print(
        (doc.id || '') + '\t' +
        (doc.c || '') + '\t' +
        (doc.id || '') + '\t' +
        (doc.ctx || '') + '\t' +
        (doc.attr.ns || '') + '\t' +
        (doc.attr.numyields || '') + '\t' +
        (doc.attr.storage || '') + '\t' +
        (doc.attr.remote || '') + '\t' +
        (doc.attr.durationmin || '') + '\t' +
        commandStr
    );
});
EOF

# Continue HTML file with JavaScript for modal
cat >> $OUTPUT_FILE <<EOF
        </tbody>
    </table>

    <!-- Modal for displaying full query -->
    <div id="queryModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2>Full Query</h2>
            <pre id="queryContent"></pre>
        </div>
    </div>

    <script>
        // Convert command strings to clickable links
        document.addEventListener('DOMContentLoaded', function() {
            const tbody = document.querySelector('tbody');
            const rows = tbody.querySelectorAll('tr');
            
            rows.forEach(row => {
                const cells = row.querySelectorAll('td');
                if (cells.length >= 10) {
                    const commandCell = cells[9];
                    const commandText = commandCell.textContent;
                    commandCell.innerHTML = '<a href="#" class="command-link" onclick="showQuery(event, \'' + 
                                           escapeHtml(commandText) + '\')">View Command</a>';
                }
            });
        });

        function escapeHtml(unsafe) {
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        function showQuery(event, query) {
            event.preventDefault();
            const modal = document.getElementById('queryModal');
            const queryContent = document.getElementById('queryContent');
            
            try {
                // Try to pretty-print the JSON
                const formattedQuery = JSON.stringify(JSON.parse(query.replace(/&quot;/g, '"')), null, 2);
                queryContent.textContent = formattedQuery;
            } catch (e) {
                // If not valid JSON, just display as-is
                queryContent.textContent = query.replace(/&quot;/g, '"');
            }
            
            modal.style.display = 'block';
        }

        function closeModal() {
            document.getElementById('queryModal').style.display = 'none';
        }

        // Close modal when clicking outside of it
        window.onclick = function(event) {
            const modal = document.getElementById('queryModal');
            if (event.target == modal) {
                closeModal();
            }
        }
    </script>
</body>
</html>
EOF

# Open the HTML file in default browser
if which xdg-open > /dev/null; then
    xdg-open $OUTPUT_FILE
elif which open > /dev/null; then
    open $OUTPUT_FILE
else
    echo "HTML output created at $OUTPUT_FILE"
fi
