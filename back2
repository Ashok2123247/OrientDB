#!/bin/bash

# MongoDB Backup and Restore Script with hardcoded values
# Simplified version without count verification

# Hardcoded configuration - modify these values as needed
SOURCE_SERVER="server1"
TARGET_SERVER="server2"
DB_NAME="mydatabase"
COLLECTION="mycollection"  # Leave empty for full database backup
FILTER='{"status":"active"}'  # Leave empty for full collection backup
BACKUP_PATH="/tmp/mongobackups"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)

# Function to get MongoDB URI from your collection
get_mongo_uri() {
    local server_name="$1"
    # Replace this with your actual method to get the URI from your collection
    case "$server_name" in
        "server1") echo "mongodb://user:pass@server1.example.com:27017" ;;
        "server2") echo "mongodb://user:pass@server2.example.com:27017" ;;
        *) echo "mongodb://user:pass@$server_name.example.com:27017" ;;
    esac
}

# Get URIs for source and target
SOURCE_URI=$(get_mongo_uri "$SOURCE_SERVER")
TARGET_URI=$(get_mongo_uri "$TARGET_SERVER")

if [[ -z "$SOURCE_URI" || -z "$TARGET_URI" ]]; then
    echo "Error: Could not retrieve MongoDB URIs for the specified servers"
    exit 1
fi

# Create backup directory if it doesn't exist
mkdir -p "$BACKUP_PATH"

# Perform backup
echo "Starting backup..."
BACKUP_FILE=""
if [[ -n "$COLLECTION" ]]; then
    if [[ -n "$FILTER" ]]; then
        # Collection with filter backup
        BACKUP_FILE="${DB_NAME}_${COLLECTION}_filter_${TIMESTAMP}.json"
        echo "Exporting $DB_NAME.$COLLECTION with filter $FILTER to $BACKUP_FILE"
        mongoexport --uri="$SOURCE_URI" -d "$DB_NAME" -c "$COLLECTION" --query="$FILTER" --out="$BACKUP_PATH/$BACKUP_FILE"
    else
        # Collection backup
        BACKUP_FILE="${DB_NAME}_${COLLECTION}_${TIMESTAMP}.json"
        echo "Exporting $DB_NAME.$COLLECTION to $BACKUP_FILE"
        mongoexport --uri="$SOURCE_URI" -d "$DB_NAME" -c "$COLLECTION" --out="$BACKUP_PATH/$BACKUP_FILE"
    fi
else
    # Full database backup
    BACKUP_FILE="${DB_NAME}_${TIMESTAMP}"
    echo "Creating dump of $DB_NAME to $BACKUP_FILE"
    mongodump --uri="$SOURCE_URI" --db "$DB_NAME" --out="$BACKUP_PATH/$BACKUP_FILE"
fi

if [[ $? -ne 0 ]]; then
    echo "Error: Backup failed"
    exit 1
fi

# Perform restore
echo "Starting restore..."
if [[ -n "$COLLECTION" ]]; then
    # Collection restore
    echo "Importing $BACKUP_FILE to $TARGET_URI"
    mongoimport --uri="$TARGET_URI" -d "$DB_NAME" -c "$COLLECTION" --file="$BACKUP_PATH/$BACKUP_FILE"
else
    # Full database restore
    echo "Restoring $BACKUP_FILE to $TARGET_URI"
    mongorestore --uri="$TARGET_URI" --db "$DB_NAME" "$BACKUP_PATH/$BACKUP_FILE/$DB_NAME"
fi

if [[ $? -ne 0 ]]; then
    echo "Error: Restore failed"
    exit 1
fi

echo "Backup and restore completed successfully"
exit 0
