/* Run in any database context (requires the admin role) */
(function () {
  const B = 1024 * 1024 * 1024;          // bytes → gigabytes
  const c = db.adminCommand({ serverStatus: 1 }).wiredTiger.cache;

  return {
    WT_MaxSizeGB:      +(c['maximum bytes configured']        / B).toFixed(2),
    WT_CurrentSizeGB:  +(c['bytes currently in the cache']    / B).toFixed(2),
    DirtyPagesSizeGB:  +(c['tracked dirty bytes in the cache']/ B).toFixed(2),
    WT_ReadsSizeGB:    +(c['bytes read into cache']           / B).toFixed(2),
    WT_WriteSizeGB:    +(c['bytes written from cache']        / B).toFixed(2)
  };
})();




/* Also run in mongosh; prints each metric on its own line */
(() => {
  const B = 1024 * 1024 * 1024;
  const c = db.runCommand({ serverStatus: 1 }).wiredTiger.cache;

  print(`WT_MaxSizeGB      : ${(c['maximum bytes configured']        / B).toFixed(2)}`);
  print(`WT_CurrentSizeGB  : ${(c['bytes currently in the cache']    / B).toFixed(2)}`);
  print(`DirtyPagesSizeGB  : ${(c['tracked dirty bytes in the cache']/ B).toFixed(2)}`);
  print(`WT_ReadsSizeGB    : ${(c['bytes read into cache']           / B).toFixed(2)}`);
  print(`WT_WriteSizeGB    : ${(c['bytes written from cache']        / B).toFixed(2)}`);
})();
