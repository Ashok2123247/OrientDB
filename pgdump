#!/bin/bash

# Configuration
BACKUP_DIR="/tmp/pg_backup_restore"
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
LOG_FILE="$BACKUP_DIR/pg_backup_restore_$TIMESTAMP.log"

# Check if backup directory exists, if not create it
if [ ! -d "$BACKUP_DIR" ]; then
    mkdir -p "$BACKUP_DIR" || { echo "Failed to create backup directory $BACKUP_DIR"; exit 1; }
    echo "Created backup directory: $BACKUP_DIR"
fi

# Log function
log() {
    echo "$(date +"%Y-%m-%d %H:%M:%S"): $1" | tee -a "$LOG_FILE"
}

# Read user input
read -p "Enter PostgreSQL username: " PG_USER
read -s -p "Enter PostgreSQL password: " PG_PASSWORD
echo
read -p "Enter database name: " DB_NAME
read -p "Enter host (default: localhost): " PG_HOST
PG_HOST=${PG_HOST:-localhost}
read -p "Enter port (default: 5432): " PG_PORT
PG_PORT=${PG_PORT:-5432}

read -p "Enter action (1 for restore, 0 to exit): " ACTION

if [ "$ACTION" -eq 0 ]; then
    log "User chose to exit. Script terminated."
    exit 0
elif [ "$ACTION" -ne 1 ]; then
    log "Invalid action selected. Only 0 (exit) or 1 (restore) are allowed."
    exit 1
fi

# Backup file name
BACKUP_FILE="$BACKUP_DIR/${DB_NAME}_backup_$TIMESTAMP.sql"

# Export password to avoid prompt
export PGPASSWORD=$PG_PASSWORD

# Backup database
log "Starting backup of database $DB_NAME..."
pg_dump -U "$PG_USER" -h "$PG_HOST" -p "$PG_PORT" -F p -b -v -f "$BACKUP_FILE" "$DB_NAME" 2>> "$LOG_FILE"

if [ $? -eq 0 ]; then
    log "Backup completed successfully. File: $BACKUP_FILE"
else
    log "Backup failed. Check $LOG_FILE for details."
    exit 1
fi

# Restore with drop option
log "Starting restore of database $DB_NAME with DROP option..."

# Check if database exists
DB_EXISTS=$(psql -U "$PG_USER" -h "$PG_HOST" -p "$PG_PORT" -lqt | cut -d \| -f 1 | grep -w "$DB_NAME" | wc -l)

if [ "$DB_EXISTS" -eq 1 ]; then
    log "Database $DB_NAME exists. Dropping it first..."
    dropdb -U "$PG_USER" -h "$PG_HOST" -p "$PG_PORT" "$DB_NAME" 2>> "$LOG_FILE"
    if [ $? -ne 0 ]; then
        log "Failed to drop database $DB_NAME"
        exit 1
    fi
fi

# Create new database
log "Creating new database $DB_NAME..."
createdb -U "$PG_USER" -h "$PG_HOST" -p "$PG_PORT" "$DB_NAME" 2>> "$LOG_FILE"
if [ $? -ne 0 ]; then
    log "Failed to create database $DB_NAME"
    exit 1
fi

# Restore from backup
log "Restoring data from backup..."
psql -U "$PG_USER" -h "$PG_HOST" -p "$PG_PORT" -d "$DB_NAME" -f "$BACKUP_FILE" 2>> "$LOG_FILE"

if [ $? -eq 0 ]; then
    log "Restore completed successfully."
else
    log "Restore failed. Check $LOG_FILE for details."
    exit 1
fi

# Clean up
unset PGPASSWORD
log "Script completed successfully."
exit 0
