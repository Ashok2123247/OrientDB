from neo4j import GraphDatabase
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

# --------- Configuration ---------
NEO4J_URI = "bolt://localhost:7687"
NEO4J_USER = "neo4j"
NEO4J_PASSWORD = "your_password"

EMAIL_SENDER = "your_email@example.com"
EMAIL_RECEIVER = "recipient@example.com"
SMTP_SERVER = "smtp.example.com"
SMTP_PORT = 587
SMTP_USERNAME = "your_email@example.com"
SMTP_PASSWORD = "your_email_password"
# ----------------------------------

def get_transactions():
    driver = GraphDatabase.driver(NEO4J_URI, auth=(NEO4J_USER, NEO4J_PASSWORD))
    with driver.session() as session:
        result = session.run("SHOW TRANSACTIONS")
        transactions = [record.data() for record in result]
    driver.close()
    return transactions

def format_transactions_html(transactions):
    if not transactions:
        return "<p>No active transactions.</p>"

    html = "<h3>Active Transactions in Neo4j</h3><table border='1' cellpadding='5'><tr>"
    headers = transactions[0].keys()
    for header in headers:
        html += f"<th>{header}</th>"
    html += "</tr>"

    for txn in transactions:
        html += "<tr>"
        for value in txn.values():
            html += f"<td>{value}</td>"
        html += "</tr>"
    html += "</table>"
    return html

def send_email(subject, html_content):
    message = MIMEMultipart("alternative")
    message["Subject"] = subject
    message["From"] = EMAIL_SENDER
    message["To"] = EMAIL_RECEIVER

    part = MIMEText(html_content, "html")
    message.attach(part)

    with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
        server.starttls()
        server.login(SMTP_USERNAME, SMTP_PASSWORD)
        server.sendmail(EMAIL_SENDER, EMAIL_RECEIVER, message.as_string())

def main():
    transactions = get_transactions()
    html_content = format_transactions_html(transactions)
    send_email("Neo4j Transaction Alert", html_content)
    print("Email sent.")

if __name__ == "__main__":
    main()
