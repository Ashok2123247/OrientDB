#!/bin/bash

# Email settings
TO_EMAIL="you@example.com"
SUBJECT="System Alert on $(hostname)"

# Thresholds
CPU_THRESHOLD=80
MEM_THRESHOLD=80
REPL_LAG_THRESHOLD=60

# ---- SYSTEM RESOURCE SUMMARY (like htop) ----

# CPU usage (total)
CPU_TOTAL=$(top -bn1 | grep "Cpu(s)" | awk '{print 100 - $8}')
CPU_TOTAL=$(printf "%.1f" "$CPU_TOTAL")

# Memory usage (total)
MEM_USED=$(free -m | awk '/Mem:/ {print $3}')
MEM_TOTAL=$(free -m | awk '/Mem:/ {print $2}')
MEM_PERC=$(awk "BEGIN {printf \"%.1f\", ($MEM_USED/$MEM_TOTAL)*100}")

# ---- TOP CPU & MEM processes ----
TOP_CPU=$(ps -eo pid,ppid,cmd,%cpu --sort=-%cpu | head -n 2 | tail -n 1)
TOP_MEM=$(ps -eo pid,ppid,cmd,%mem --sort=-%mem | head -n 2 | tail -n 1)

# ---- MongoDB Replication Lag ----
REPL_LAG=0
REPL_STATUS=$(mongo --quiet --eval 'rs.printSlaveReplicationInfo()' 2>/dev/null)

if echo "$REPL_STATUS" | grep -q "behind the primary"; then
    REPL_LAG=$(echo "$REPL_STATUS" | grep "behind the primary" | awk '{print $(NF-1)}')
fi

# ---- Disk usage summary ----
DISK_ALERTS=""
DISK_REPORT=$(df -h --output=target,pcent | tail -n +2)

while read -r line; do
    MOUNT=$(echo "$line" | awk '{print $1}')
    USAGE=$(echo "$line" | awk '{print $2}' | tr -d '%')
    
    if [ "$USAGE" -ge 90 ]; then
        STATUS="CRITICAL"
    elif [ "$USAGE" -ge 80 ]; then
        STATUS="WARNING"
    else
        STATUS="NORMAL"
    fi

    if [[ "$STATUS" != "NORMAL" ]]; then
        DISK_ALERTS+="$MOUNT usage: ${USAGE}% - $STATUS\n"
    fi
done <<< "$DISK_REPORT"

# ---- Build alert message ----
ALERT_MSG="===== System Resource Summary =====
Total CPU Usage : ${CPU_TOTAL}%
Total Mem Usage : ${MEM_PERC}% (${MEM_USED}MB of ${MEM_TOTAL}MB)

Top CPU Process : $TOP_CPU
Top MEM Process : $TOP_MEM
"

# Conditional alerts
if (( $(echo "$CPU_TOTAL > $CPU_THRESHOLD" | bc -l) )); then
    ALERT_MSG+="\n⚠️  High total CPU usage: ${CPU_TOTAL}%\n"
fi

if (( $(echo "$MEM_PERC > $MEM_THRESHOLD" | bc -l) )); then
    ALERT_MSG+="\n⚠️  High total Memory usage: ${MEM_PERC}%\n"
fi

if (( $(echo "$REPL_LAG > $REPL_LAG_THRESHOLD" | bc -l) )); then
    ALERT_MSG+="\n⚠️  MongoDB Replication Lag: $REPL_LAG seconds\n"
fi

if [[ -n "$DISK_ALERTS" ]]; then
    ALERT_MSG+="\n===== Disk Usage Alerts =====\n$DISK_ALERTS"
fi

# Send email if alerts exist
if echo "$ALERT_MSG" | grep -q "⚠️"; then
    echo -e "$ALERT_MSG" | mailx -s "$SUBJECT" "$TO_EMAIL"
fi
